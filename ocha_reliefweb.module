<?php

/**
 * @file
 * Module file for the OCHA ReliefWeb module.
 */

declare(strict_types=1);

use Drupal\Core\Template\Attribute;
use Drupal\file\FileInterface;
use Drupal\ocha_reliefweb\Helpers\ClassHelper;
use Drupal\ocha_reliefweb\Helpers\UuidHelper;
use Drupal\ocha_reliefweb\ReliefWebBundleEntityInterface;

/**
 * Implements hook_theme().
 */
function ocha_reliefweb_theme() {
  $class_prefix = \Drupal::config('ocha_reliefweb.settings')->get('template_class_prefix') ?? 'ocha-reliefweb';

  $themes = [
    // Theme for a ReliefWeb document.
    'ocha_reliefweb_document' => [
      'variables' => [
        // Class prefix.
        'class_prefix' => $class_prefix,
        // Heading level.
        'level' => 1,
        // Wrapper attributes.
        'attributes' => NULL,
        // Document title.
        'title' => NULL,
        // Attributes for the title.
        'title_attributes' => NULL,
        // Document publication date.
        'date' => NULL,
        // Document's main content.
        'content' => NULL,
        // Attributes for the content.
        'content_attributes' => NULL,
      ],
    ],
    // Theme for a list of attachments.
    'ocha_reliefweb_attachment_list' => [
      'variables' => [
        // Class prefix.
        'class_prefix' => $class_prefix,
        // Section heading level.
        'level' => 2,
        // Section attributes.
        'attributes' => NULL,
        // Section title.
        'title' => t('Attachments'),
        // Section title attributes.
        'title_attributes' => NULL,
        // Type of attachments.
        'type' => NULL,
        // List of files. Each item has the following properties:
        // - url: link to the file
        // - name: file name
        // - label: file name or 'Download' etc.
        // - description: file description (extension, size, language etc.)
        'list' => [],
        // List attributes.
        'list_attributes' => NULL,
        // Section footer.
        'footer' => NULL,
        // Section footer attributes.
        'footer_attributes' => NULL,
        // Flag to indicate if the first attachment's preview should be lazy
        // loaded or not.
        'lazy_load_first_preview' => FALSE,
      ],
    ],
    // Theme for a list of articles.
    'ocha_reliefweb_river' => [
      'variables' => [
        // Class prefix.
        'class_prefix' => $class_prefix,
        // Heading level for the river section.
        'level' => 2,
        // The id of the river section.
        'id' => '',
        // The API resource (ex: reports).
        'resource' => '',
        // Section attributes.
        'attributes' => NULL,
        // Title of the river section.
        'title' => NULL,
        // Title attributes.
        'title_attributes' => NULL,
        // Results attributes.
        'results_attributes' => NULL,
        // River attributes.
        'river_attributes' => NULL,
        // Results (optional). See "ocha_reliefweb_results" below.
        'results' => NULL,
        // The article entities to display.
        'entities' => [],
        // Article attributes.
        'article_attributes' => NULL,
        // View more link (optional) URL to the full river and link text.
        'more' => NULL,
        // Pager (optional). See "ocha_reliefweb_river_results" below.
        'pager' => NULL,
        // Message for when there are no items.
        'empty' => t('No results found.'),
      ],
    ],
    // Theme for a the number of results in a list of articles.
    'ocha_reliefweb_river_results' => [
      'variables' => [
        // Class prefix.
        'class_prefix' => $class_prefix,
        // Section attributes.
        'attributes' => NULL,
        // The total number of resources matching the search query.
        'total' => 0,
        // The start of the result range.
        'start' => 0,
        // The end of the result range.
        'end' => 0,
      ],
    ],
    // Theme for an article in a list of articles.
    'ocha_reliefweb_river_article' => [
      'variables' => [
        // Class prefix.
        'class_prefix' => $class_prefix,
        // Heading level for the river article.
        'level' => 3,
        // Article attributes.
        'attributes' => NULL,
        // The aricle entity's data as an associative array with id, bundle,
        // url, langcode, title etc.
        'entity' => NULL,
        // Meta information attributes.
        'meta_attributes' => NULL,
      ],
    ],
    // Theme for the title of an article in a list of articles.
    'ocha_reliefweb_river_article_title' => [
      'variables' => [
        // Class prefix.
        'class_prefix' => $class_prefix,
        // Heading level for the river article title.
        'level' => 3,
        // Article title attributes.
        'attributes' => NULL,
        // Language code of the title.
        'langcode' => 'en',
        // An optional HTML safe prefix.
        'prefix' => '',
        // URL to the full article.
        'url' => '',
        // Title to the article.
        'title' => '',
      ],
    ],
    // Theme for the country slug of an article.
    'ocha_reliefweb_entity_country_slug' => [
      'variables' => [
        // Class prefix.
        'class_prefix' => $class_prefix,
        // Wrapper attributes.
        'attributes' => NULL,
        // List of countries with the a url to either the country page or the
        // river filtered by the country, a name and a shortname.
        'countries' => [],
      ],
    ],
    'ocha_reliefweb_entity_image' => [
      'variables' => [
        // Class prefix.
        'class_prefix' => $class_prefix,
        // Wrapper attributes.
        'attributes' => NULL,
        // Image information with urls (different sizes), width, height, alt
        // and copyright and optionally the loading mode.
        'image' => [],
        // Flag to indicate whether to show the caption or not.
        'caption' => TRUE,
        // Flag to indicate the default loading mode: lazy or eager.
        'loading' => 'lazy',
      ],
    ],
    // Theme for an article's detailed information (ex: source, format).
    'ocha_reliefweb_entity_meta' => [
      'variables' => [
        // Class prefix.
        'class_prefix' => $class_prefix,
        // Wrapper attributes.
        'attributes' => NULL,
        // Flag indicating the list of meta is the "core" meta information,
        // usually displayed in river articles or below the title on article
        // pages.
        'core' => TRUE,
        // List of meta information for an article (ex: dates, sources etc.).
        // Each meta data has the following properties: type (simple, date,
        // date-range or taglist), label, value (simple, date, array with start
        // and end date or list of tags). For tag lists, there are also count
        // and sort properties.
        'meta' => [],
      ],
    ],
  ];

  // Add themes for the main river articles.
  $entity_types = \Drupal::entityTypeManager()->getStorage('reliefweb_resource_type')->loadMultiple();
  foreach ($entity_types as $entity_type) {
    $themes['ocha_reliefweb_river_article__' . $entity_type->id()] = [
      'base hook' => 'ocha_reliefweb_river_article',
    ];
  }

  return $themes;
}

/**
 * Implements hook_entity_bundle_info_alter().
 *
 * Add bundle classes to OCHA ReliefWeb classes to handle business logic.
 */
function ocha_reliefweb_entity_bundle_info_alter(array &$bundles): void {
  $namespace = '\Drupal\ocha_reliefweb\Entity';

  foreach ($bundles as $entity_type_id => $items) {
    if ($entity_type_id === 'reliefweb_resource') {
      foreach ($items as $bundle => $info) {
        $class = ClassHelper::classExists($namespace, 'ReliefWeb' . ucfirst($bundle));
        if ($class === FALSE) {
          $class = ClassHelper::classExists($namespace, $entity_type_id . 'Base');
        }
        if ($class !== FALSE && is_subclass_of($class, ReliefWebBundleEntityInterface::class)) {
          $label = ucwords(str_replace(['_', '-'], ' ', $bundle));
          $bundles[$entity_type_id][$bundle]['class'] = $class;
          $bundles[$entity_type_id][$bundle]['label'] = $label;
        }
      }
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave() for files.
 *
 * Change the URI of files to use their UUID.
 */
function ocha_reliefweb_file_presave(FileInterface $file) {
  $uuid = $file->uuid();
  $uri = $file->getFileUri();
  if (empty($uuid) || empty($uri)) {
    return;
  }

  // Skip temporary files.
  if (strpos($uri, 'temporary://') === 0) {
    return;
  }

  // Only process files attached to ReliefWeb submissions.
  $base_uri = \Drupal::config('ocha_reliefweb.settings')->get('reliefweb_api_submission_file_base_uri');
  if (empty($base_uri) || strpos($uri, rtrim($base_uri, '/') . '/') !== 0) {
    return;
  }

  // If the file UUID is version 5 UUID then it means it has already been
  // processed.
  if (UuidHelper::isUuidV5($uuid)) {
    return;
  }

  // Let other modules decide if this should apply.
  $apply = TRUE;
  $clone = clone $file;
  \Drupal::moduleHandler()->alter('ocha_reliefweb_file_presave', $clone, $apply);
  if (!$apply) {
    return;
  }

  // Only process files with a valid uuid and uri and if not already processed
  // which can be determined by looking for the file uuid in its uri.
  $file_system = \Drupal::service('file_system');
  $logger = \Drupal::logger('ocha_reliefweb');

  // Note: the locale is assumed to be UTF-8.
  $info = pathinfo($uri);
  $directory = $info['dirname'];

  // The ReliefWeb resource UUID is the folder containing the file.
  // @see \Drupal\ocha_reliefweb\Plugin\Field\FieldWidget\ReliefWebResourceContentReportWdiget::addAttachmentsFormElement()
  $resource_uuid = basename($directory);
  if (!UuidHelper::isUuidValid($resource_uuid)) {
    $logger->warning('Invalid entity UUID for: @uri', [
      '@uri' => $uri,
    ]);
    return;
  }

  // We use the UUID as filename, preserving only the extension so that
  // the URI is short and predictable.
  $new_uri = rtrim($directory, '/') . '/' . $uuid . '.' . strtolower($info['extension']);

  // Prepare the destination directory.
  if (!$file_system->prepareDirectory($directory, $file_system::CREATE_DIRECTORY)) {
    $logger->warning('Unable to create the destination directory: @directory', [
      '@directory' => $directory,
    ]);
    return;
  }

  // Move the file.
  if (!$file_system->move($uri, $new_uri, $file_system::EXISTS_ERROR)) {
    $logger->warning('Unable to move file @uri to @new_uri', [
      '@uri' => $uri,
      '@new_uri' => $new_uri,
    ]);
    return;
  }

  // Update the URI if the file could be moved.
  $file->setFileUri($new_uri);

  // Generate the permanent UUID for the file based on the new generated URI
  // and the UUID of the entity the file is attached to.
  $url = $file->createFileUrl(FALSE);
  $new_uuid = UuidHelper::generateUuidV5($resource_uuid, $url);

  $file->set('uuid', $new_uuid);
}

/**
 * Implements hook_preprocess_page_title().
 *
 * Hide the page title block on ReliefWeb resource pages since the title
 * is added in the `ocha-reliefweb-document.html.twig` template.
 */
function ocha_reliefweb_preprocess_page_title(array &$variables) {
  $route_match = \Drupal::routeMatch();
  $route_name = $route_match->getRouteName();
  if ($route_name === 'entity.reliefweb_resource.canonical') {
    $entity = $route_match->getParameter('reliefweb_resource');
    if ($entity->bundle->entity->isPageTitleDisabled()) {
      $variables['title'] = NULL;
    }
  }
}

/**
 * Implements hook_preprocess().
 *
 * Ensure the attributes and *_attributes are set for the unocha templates.
 */
function ocha_reliefweb_preprocess(array &$variables, $hook) {
  if (strpos($hook, 'ocha_reliefweb_') === 0) {
    foreach ($variables as $key => $value) {
      if ($key === 'attributes' || strpos($key, '_attributes') !== FALSE) {
        if (is_null($value)) {
          $variables[$key] = new Attribute();
        }
      }
    }
  }
}
